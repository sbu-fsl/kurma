diff --git a/libclamav/clamav.h b/libclamav/clamav.h
index 3f69749..641cfd3 100644
--- a/libclamav/clamav.h
+++ b/libclamav/clamav.h
@@ -768,6 +768,10 @@ int cl_finish_hash(void *ctx, void *buf);
 void cl_hash_destroy(void *ctx);
 /* End of crypto/hashing functions */
 
+/* buffer scanning */
+int cl_scanbuff(const void *buffer, size_t length, const char **virname, unsigned long int *scanned, const struct cl_engine *engine, unsigned int scanoptions);
+int cl_scanbuff_callback(const void *buffer, size_t length, const char **virname, unsigned long int *scanned, const struct cl_engine *engine, unsigned int scanoptions, void *context);
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/libclamav/fmap.c b/libclamav/fmap.c
index 875ac3e..92dab28 100644
--- a/libclamav/fmap.c
+++ b/libclamav/fmap.c
@@ -792,3 +792,23 @@ extern void cl_fmap_close(cl_fmap_t *map)
 {
     funmap(map);
 }
+
+fmap_t *fmap_buff_check_empty(const void *buff, size_t len, int *empty) {
+    fmap_t *m;
+
+    *empty = 0;
+    if(!len) {
+	cli_dbgmsg("fmap: attempted void mapping\n");
+	*empty = 1;
+	return NULL;
+    }
+    m = cl_fmap_open_memory(buff, len);
+    if (!m)
+	return NULL;
+    return m;
+}
+
+fmap_t *fmap_buff(const void *buff, size_t len) {
+    int unused;
+    return fmap_buff_check_empty(buff, len, &unused);
+}
diff --git a/libclamav/fmap.h b/libclamav/fmap.h
index 6d0ca0f..6ed5028 100644
--- a/libclamav/fmap.h
+++ b/libclamav/fmap.h
@@ -182,4 +182,7 @@ int fmap_dump_to_file(fmap_t *map, const char *tmpdir, char **outname, int *outf
 /* deprecated */
 int fmap_fd(fmap_t *m);
 
+fmap_t *fmap_buff(const void *buff, size_t len);
+fmap_t *fmap_buff_check_empty(const void *buff, size_t len, int *empty);
+
 #endif
diff --git a/libclamav/libclamav.map b/libclamav/libclamav.map
index a918f3b..f5bb0b3 100644
--- a/libclamav/libclamav.map
+++ b/libclamav/libclamav.map
@@ -57,6 +57,8 @@ CLAMAV_PUBLIC {
     cl_finish_hash;
     cl_hash_destroy;
     cl_engine_stats_enable;
+    cl_scanbuff;
+    cl_scanbuff_callback;
     lsig_sub_matched;
 };
 CLAMAV_PRIVATE {
diff --git a/libclamav/scanners.c b/libclamav/scanners.c
index 5df3dab..56f0f5e 100644
--- a/libclamav/scanners.c
+++ b/libclamav/scanners.c
@@ -3709,6 +3709,26 @@ int cl_scanfile_callback(const char *filename, const char **virname, unsigned lo
     return ret;
 }
 
+int cl_scanbuff(const void *buffer, size_t length, const char **virname, unsigned long int *scanned, const struct cl_engine *engine, unsigned int scanoptions)
+{
+    return cl_scanbuff_callback(buffer, length, virname, scanned, engine, scanoptions, NULL);
+}
+
+int cl_scanbuff_callback(const void *buffer, size_t length, const char **virname, unsigned long int *scanned, const struct cl_engine *engine, unsigned int scanoptions, void *context)
+{
+    cl_fmap_t *m;
+    int empty;
+
+    if(!buffer)
+        return CL_EARG;
+
+    m = fmap_buff(buffer, length);
+    if(!m)
+	return CL_EMEM;
+
+    return cl_scanmap_callback(m, virname, scanned, engine, scanoptions, context);
+}
+
 /*
 Local Variables:
    c-basic-offset: 4
