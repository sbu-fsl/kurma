###################################################
#
# EXPORT
#
# To function, all that is required is an EXPORT
#
# Define the absolute minimal export
#
###################################################

EXPORT
{
	# Export Id (mandatory, each EXPORT must have a unique Export_Id)
	Export_Id = 79;

	# Exported path (mandatory)
	Path = /nfsdata;

	# Pseudo Path (required for NFS v4)
	Pseudo = /vfs0;

	Squash = None;

	SecType = "sys";

	# Required for access (default is None)
	# Could use CLIENT blocks instead
	Access_Type = RW;

	# Exporting FSAL
	#FSAL {
	#	Name = PCACHE
	#	FSAL {
	#		Name = KURMA;
	#	}
	#}
	#
	FSAL {
		name = PCACHE;
		AVEnable = False;
		CacheDataPath = /kurma-data/pcache/data;
		CacheMetadataPath = /kurma-data/pcache/meta;
		# AVMaxFileSize = 10485760; # 10 MB
		AVMaxFileSize = 104857600; #100 MB
		WritebackSec = 300;
		FSAL {
			name = KURMA;
		}
	}


}

KURMA {
	link_support = False;
	Remote_Server {
		Kurma_Server = "130.245.177.111";
		Kurma_Port = 9091;
		Client_ID = "FedoraB";
		Volume_ID = "volume_id-test";
		Renew_Interval = 10;
	}
}

NFSv4
{
	# Lifetime for NFSv4 Leases
	# Lease_Lifetime = 120 ;
    	# set short grace period in DEV environment
	Lease_Lifetime = 7 ;
	Grace_Period = 7 ;
}

LOG
{
	Default_log_level = EVENT;

	Format {
		EPOCH = False;
		HOSTNAME = False;
		FILE_NAME = True;
		LINE_NUM = True;
		PROGNAME = False;
		PID = False;
	}

	# See log/log_functions.c:1713 for a complete list of Components
	# See log/log_functions.c:241 for a complete list of debugging levels
	Components
	{
		FSAL = INFO;

		CACHE_INODE = EVENT;

		CACHE_INODE_LRU = EVENT;

		DUPREQ = EVENT;

		NFS_V4 = EVENT;
	}
}

# vim:noexpandtab:shiftwidth=8:tabstop=8:
