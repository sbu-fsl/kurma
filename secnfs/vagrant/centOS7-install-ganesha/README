This file is used to create virtual machines using vagrant and install nfs-ganesha as proxy on those VMs.

The nfs-ganesha proxy's install script can be used with/without vagrant.

SSH login without password
==========================

1. Create a key using ssh-key-gen on local-host. Press ENTER when prompted for file in which key should be saved. Enter and renter a passphrase when prompted.
	# ssh-keygen

2. Add your key to the ssh-agent. Turn on the ssh-agent:
	# eval `ssh-agent -s`

3. Add your SSH key to the ssh-agent:
	# ssh-add ~/.ssh/id_rsa

3. Copy the public key to remote-host using ssh-copy-id. This will append the keys to the remote-host ".ssh/authorized_key". Enter your git passphrase.
	# ssh-copy-id -i ~/.ssh/id_rsa.pub git.fsl.cs.sunysb.edu

4. If you don't have ssh-copy-id on your machine then manually copy the keys.
	# cat ~/.ssh/id_rsa.pub | ssh <user>@git.fsl.cs.sunysb.edu 'cat >> ~/.ssh/authorized_keys'


Vagrant
=======

Steps to follow to create a centOS7 virtual machine and install nfs-ganesha as proxy on it:

1. Download and install VirtualBox on your host machine

2. Install vagrant on your host machine

3. Create a new project directory <proj-dir>. Run the below mentioned command in your project directory:
	# vagrant init chef/centos-7.0

We have used "chef" box here for centOS7, there are other boxes as well for centOS7, like "hfm4".

4. With the above command a 'Vagrantfile' file will be created in your project directory. Replace this file with the Vagrant file in the repository or make the changes to the original file accordingly. Please make sure you change the username in the Vagrantfile. To run the script from Vagrant you should have passwordless ssh enabled (execute the passwordless login steps).
	# config.ssh.forward_agent = true
	# config.vm.provision :shell, path: "./install_ganesha.sh", args: "-u  <username>"

Also add these lines to the Vagrantfile, if Vagrantfile is not copied from the repo:
	# config.vm.network "forwarded_port", guest: 80, host: 8080, auto_correct: "true"
	# config.vm.network "forwarded_port", guest: 443, host: 8443, auto_correct: "true"

Add this line to customize vm for specific memory (for e.g. this will give 2 GB memory to the VM):
	# vb.customize ["modifyvm", :id, "--memory", "2048"]

5. Copy the "install_ganesha.sh" in your project directory.

6. Run the below mentioned command to configure the Virtual machine.
	# vagrant up

7. The above command after configuring the VM will run the provisioner, in our case "shell"
	==> default: Running provisioner: shell...

Once this is done, your VM is ready to use.

Log into the newly created VM with the command:
	# vagrant ssh

You will be logged in as "vagrant" user. If you want to log in as root user, use the deafult password "vagrant".

TroubleShooting:
================

If somehow because of some host config issues, the shell provisioning fails. Log into the VM.
	# vagrant ssh

Copy the "install_ganesha.sh" script.

Comment these lines:

>>>>>>>>>
	mkdir ~/.ssh
	chmod 700 ~/.ssh
	touch ~/.ssh/known_hosts
	ssh-keyscan -H git.fsl.cs.sunysb.edu >> ~/.ssh/known_hosts
>>>>>>>>>

And run the script.
	#./install_ganesha.sh -u <username>


Configure Server:
=================

For vagrant:

1. Create a new project directory <proj-dir>. Run the below mentioned command in your project directory:
        # vagrant init chef/centos-7.0

2. Follow the same steps as above to configure the Vagrantfile. Either copy the Vagrantfile from repo else make the changes accordingly. Replace the script name with "config-server.sh".
	 # config.vm.provision :shell, path: "./config-server.sh", args: "-u  <username>"
Give your username in the args.

3. Configure the VM
	# vagrant up

"config-server" script will checkout the repo, download kernel 3.14.17, apply patches, compile and install the kernel.

Once the vagrant script exits gracefully, log into the VM:
	# vagrant ssh

4. Copy the "install-ganesha-server" script from the repo in your HOME directory:
	fsl-nfs-ganesha/secnfs/vagrant/centOS7-install-ganesha/install-ganesha-server.sh

5. Execute the script.
	./install-ganesha-server.sh -u <username>


