# Kurma properties

# local gateway ID, which is a two-letter string
kurma.gateway=ny

# the key file that contains the private master key of this gateway
#
# The path is relative to the root of the resource folder, therefore it begins
# with slash.
kurma.gateway.private.keyfile=/keys/ny-pri.der

# IDs of all gateways in this Kurma instance
kurma.gateways=ny,ca

# IDs of deleted gateways this local gateway represents.  Each deleted gateway
# has an existing gateway as its delegate; the delegate gateway is responsible
# for garbage collecting the blocks created by the deleted gateway it
# represents.
kurma.deleted.gateways=ct,nv

# The key file that contains the private master key of the deleted gateways.
# For example, "/keys/deleted/ct-pri.der" and "/keys/deleted/nv-pri.der".
kurma.deleted.gateways.keyfile.dir=/keys/deleted/

# the directory that contains the public master key of all gateways.  For each
# its public key should be "<GatewayID>-pub.der".
# 
# The keys can be generated using openssl
#
# 		openssl genrsa -out ny-pri.pem 2048
#		openssl pkcs8 -topk8 -inform PEM -outform DER -in ny-pri.pem \\
#				-out ny-pri.der -nocrypt
#		openssl rsa -in ny-pri.pem -pubout -outform DER -out ny-pub.der
kurma.gateways.public.keyfile.dir=/keys/pub/

# To avoid change inode metadata too frequently, we perform batch allocation.
# This number controls how many inodes we allocate at one time.
kurma.id.allocation.unit=1024

# The number of directory handlers to be cached per volume
kurma.directory.cache.size=10240

# Kurma session time out in seconds
kurma.session.timeout.seconds=300

kurma.block.shift=20

# Kurma multiple cloud replication type: "replication", "erasure", or
# "secretsharing"
kurma.cloud.kvs.replication=secretsharing

# erasure coding parameters
kurma.cloud.kvs.erasure.k=3
kurma.cloud.kvs.erasure.m=1

# secret sharing parameters
kurma.cloud.kvs.secretsharing.algorithm=CAONT_RS
kurma.cloud.kvs.secretsharing.n=4
kurma.cloud.kvs.secretsharing.m=1
kurma.cloud.kvs.secretsharing.r=2

kurma.cloud.kvs.sort.period=60
# Semi-colon-separated Kurma cloud key-value stores (KVS).
# Each provider is unique Id of the KVS.
kurma.cloud.kvs.providers=google0;rackspace0;azure0;amazon0
#kurma.cloud.kvs.providers=google0;azure0
#kurma.cloud.kvs.providers=file0;file1;file2;file3

kurma.request.timeout.seconds=120

# File KVS
kurma.kvs.drivers.file0.type=File
kurma.kvs.drivers.file0.bucket=/tmp/filekvs0

kurma.kvs.drivers.file1.type=File
kurma.kvs.drivers.file1.bucket=/tmp/filekvs1

kurma.kvs.drivers.file2.type=File
kurma.kvs.drivers.file2.bucket=/tmp/filekvs2

kurma.kvs.drivers.file3.type=File
kurma.kvs.drivers.file3.bucket=/tmp/filekvs3

# Grant account
kurma.kvs.drivers.azure0.type=Azure
kurma.kvs.drivers.azure0.akey=XXX
kurma.kvs.drivers.azure0.skey=XXX
kurma.kvs.drivers.azure0.bucket=testcontainer

# Personal account created by Ming
kurma.kvs.drivers.google0.type=Google
kurma.kvs.drivers.google0.akey=XXX
kurma.kvs.drivers.google0.skey=XXX
kurma.kvs.drivers.google0.bucket=kurma-gcp-bucket

# User name: unittestuser
kurma.kvs.drivers.amazon0.type=Amazon
kurma.kvs.drivers.amazon0.akey=XXX
kurma.kvs.drivers.amazon0.skey=XXX
kurma.kvs.drivers.amazon0.bucket=unittestuser

# Rackspace Cloud Files
# Personal account created by Ming
kurma.kvs.drivers.rackspace0.type=Rackspace
kurma.kvs.drivers.rackspace0.akey=XXX
kurma.kvs.drivers.rackspace0.skey=XXX
kurma.kvs.drivers.rackspace0.bucket=testkurma

kurma.replicator=hedwig
kurma.hedwig.hub=130.245.177.111
kurma.hedwig.ssl=true
