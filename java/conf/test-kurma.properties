# Kurma test properties
# NOTE: Use this file if and only if you want to test Block Collector code as
# this file uses Faulty Kvs to create a partial write.

# local gateway ID, which is a two-letter string
kurma.gateway=ny

# the key file that contains the private master key of this gateway
#
# The path is relative to the root of the resource folder, therefore it begins
# with slash.
kurma.gateway.private.keyfile=/keys/ny-pri.der

# IDs of all gateways in this Kurma instance
kurma.gateways=ny,ca

# IDs of deleted gateways this local gateway represents.  Each deleted gateway
# has an existing gateway as its delegate; the delegate gateway is responsible
# for garbage collecting the blocks created by the deleted gateway it
# represents.
kurma.deleted.gateways=ct,nv

# The key file that contains the private master key of the deleted gateways.
# For example, "/keys/deleted/ct-pri.der" and "/keys/deleted/nv-pri.der".
kurma.deleted.gateways.keyfile.dir=/keys/deleted/

# the directory that contains the public master key of all gateways.  For each
# its public key should be "<GatewayID>-pub.der".
# 
# The keys can be generated using openssl
# 		openssl genrsa -out ny-pri.pem 2048
#		openssl pkcs8 -topk8 -inform PEM -outform DER -in ny-pri.pem \\
#				-out ny-pri.der -nocrypt
#		openssl rsa -in ny-pri.pem -pubout -outform DER -out ny-pub.der
kurma.gateways.public.keyfile.dir=/keys/pub/

# To avoid change inode metadata too frequently, we perform batch allocation.
# This number controls how many inodes we allocate at one time.
kurma.id.allocation.unit=128

# The number of directory handlers to be cached per volume
kurma.directory.cache.size=10240

# Kurma session time out in seconds
kurma.session.timeout.seconds=300

kurma.cloud.kvs.worker.threads=2

# kurma.block.shift=20
# Kurma multiple cloud replication type: "replication" or "erasure", or "secretsharing"
kurma.cloud.kvs.replication=replication

# Semi-colon-separated Kurma cloud key-value stores (KVS).
# Each provider is the unique id of a KVS.
kurma.cloud.kvs.providers=file0;file1

# Supported types are
#
# 	No.		Type
# 	1 		File
#	2 		Memory
#	3		Amazon
#	4		Google
#	5		Azure
kurma.kvs.drivers.file0.type=File
kurma.kvs.drivers.file0.bucket=FileStore0

kurma.kvs.drivers.file1.type=File
kurma.kvs.drivers.file1.bucket=FileStore1

kurma.max.server.threads=16

kurma.request.timeout.seconds=60
