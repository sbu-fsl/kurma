/*
 * Copyright (C) 2013-2018 Ming Chen
 * Copyright (C) 2016-2016 Praveen Kumar Morampudi
 * Copyright (C) 2016-2016 Harshkumar Patel
 * Copyright (C) 2017-2017 Rushabh Shah
 * Copyright (C) 2013-2018 Erez Zadok
 * Copyright (c) 2013-2018 Stony Brook University
 * Copyright (c) 2013-2018 The Research Foundation for SUNY
 * This file is released under the GPL.
 */
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class eu_vandertil_jerasure_jni_Jerasure */

#ifndef _Included_eu_vandertil_jerasure_jni_Jerasure
#define _Included_eu_vandertil_jerasure_jni_Jerasure
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_matrix_to_bitmatrix
 * Signature: (III[I)[I
 */
JNIEXPORT jintArray JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1matrix_1to_1bitmatrix
  (JNIEnv *, jclass, jint, jint, jint, jintArray);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_do_parity
 * Signature: (I[[B[BI)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1do_1parity
  (JNIEnv *, jclass, jint, jobjectArray, jbyteArray, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_matrix_encode
 * Signature: (III[I[[B[[BI)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1matrix_1encode
  (JNIEnv *, jclass, jint, jint, jint, jintArray, jobjectArray, jobjectArray, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_bitmatrix_encode
 * Signature: (III[I[[B[[BII)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1bitmatrix_1encode
  (JNIEnv *, jclass, jint, jint, jint, jintArray, jobjectArray, jobjectArray, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_matrix_decode
 * Signature: (III[IZ[I[[B[[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1matrix_1decode
  (JNIEnv *, jclass, jint, jint, jint, jintArray, jboolean, jintArray, jobjectArray, jobjectArray, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_bitmatrix_decode
 * Signature: (III[IZ[I[[B[[BII)Z
 */
JNIEXPORT jboolean JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1bitmatrix_1decode
  (JNIEnv *, jclass, jint, jint, jint, jintArray, jboolean, jintArray, jobjectArray, jobjectArray, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_make_decoding_matrix
 * Signature: (III[I[Z[I[I)Z
 */
JNIEXPORT jboolean JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1make_1decoding_1matrix
  (JNIEnv *, jclass, jint, jint, jint, jintArray, jbooleanArray, jintArray, jintArray);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_make_decoding_bitmatrix
 * Signature: (III[I[Z[I[I)Z
 */
JNIEXPORT jboolean JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1make_1decoding_1bitmatrix
  (JNIEnv *, jclass, jint, jint, jint, jintArray, jbooleanArray, jintArray, jintArray);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_erasures_to_erased
 * Signature: (II[I)[Z
 */
JNIEXPORT jbooleanArray JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1erasures_1to_1erased
  (JNIEnv *, jclass, jint, jint, jintArray);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_matrix_dotprod
 * Signature: (II[I[II[[B[[BI)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1matrix_1dotprod
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jint, jobjectArray, jobjectArray, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_bitmatrix_dotprod
 * Signature: (II[I[II[[B[[BII)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1bitmatrix_1dotprod
  (JNIEnv *, jclass, jint, jint, jintArray, jintArray, jint, jobjectArray, jobjectArray, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_invert_matrix
 * Signature: ([I[III)I
 */
JNIEXPORT jint JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1invert_1matrix
  (JNIEnv *, jclass, jintArray, jintArray, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_invert_bitmatrix
 * Signature: ([I[II)I
 */
JNIEXPORT jint JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1invert_1bitmatrix
  (JNIEnv *, jclass, jintArray, jintArray, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_invertible_matrix
 * Signature: ([III)I
 */
JNIEXPORT jint JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1invertible_1matrix
  (JNIEnv *, jclass, jintArray, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_invertible_bitmatrix
 * Signature: ([II)I
 */
JNIEXPORT jint JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1invertible_1bitmatrix
  (JNIEnv *, jclass, jintArray, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_print_matrix
 * Signature: ([IIII)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1print_1matrix
  (JNIEnv *, jclass, jintArray, jint, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_print_bitmatrix
 * Signature: ([IIII)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1print_1bitmatrix
  (JNIEnv *, jclass, jintArray, jint, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_matrix_multiply
 * Signature: ([I[IIIIII)[I
 */
JNIEXPORT jintArray JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1matrix_1multiply
  (JNIEnv *, jclass, jintArray, jintArray, jint, jint, jint, jint, jint);

/*
 * Class:     eu_vandertil_jerasure_jni_Jerasure
 * Method:    jerasure_get_stats
 * Signature: ([D)V
 */
JNIEXPORT void JNICALL Java_eu_vandertil_jerasure_jni_Jerasure_jerasure_1get_1stats
  (JNIEnv *, jclass, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
